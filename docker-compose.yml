version: "3.2"
services:
  # apache:
  #   build:
  #     context: './apache/'
  #     args:
  #      APACHE_VERSION: ${APACHE_VERSION}
  #   depends_on:
  #     - php
  #     - mysql
  #   networks:
  #     - frontend
  #     - backend
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - ${PROJECT_ROOT}/:/var/www/html/
    # container_name: apache

  django:
    build:
      context: './django/'
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./mysql/tmp/app/mysqld:/run/mysqld
      - ./django/:/app
    depends_on:
      - mysql
      - redis
    command: ["./wait-for-it.sh", "db:3306", "--strict", "--", "python", "manage.py", "runserver", "0.0.0.0:8000"]
    networks:
      - backend

  mysql:
    build:
      context: './mysql/'
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/tmp/app/mysqld:/var/run/mysqld
    networks:
      - backend
    container_name: db
    
  redis:
    image: redis:latest
    restart: always
    ports:
       - "6379:6379"
    volumes:
       - ./redis/redis_data:/data
       - ./redis/redis.conf:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
    networks:
      - backend
    container_name: redis
    
networks:
  frontend:
  backend:
# volumes:
#     data:
